import java.util.Arrays;
import java.util.Scanner;
public class Main {
    private static int[][] result = new int[100][50];
    private static int resultCount = 0;
    public void combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        int[] tempList = new int[candidates.length];
        backtrack(candidates, target, 0, tempList, 0);
    }
    private void backtrack(int[] candidates, int target, int start, int[] tempList, int tempSize) {
        if (target == 0) {
            System.arraycopy(tempList, 0, result[resultCount], 0, tempSize);
            resultCount++;
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (i > start && candidates[i] == candidates[i - 1]) {
                continue;
            }
            if (candidates[i] > target) {
                break;
            }
            tempList[tempSize] = candidates[i];
            backtrack(candidates, target - candidates[i], i + 1, tempList, tempSize + 1);
        }
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of candidates: ");
        int n = scanner.nextInt();
        int[] candidates = new int[n];
        System.out.println("Enter the candidates:");
        for (int i = 0; i < n; i++) {
            candidates[i] = scanner.nextInt();
        }
        System.out.print("Enter the target sum: ");
        int target = scanner.nextInt();
        Main solution = new Main();
        solution.combinationSum2(candidates, target);
        System.out.println("Combinations that sum up to " + target + ":");
        for (int i = 0; i < resultCount; i++) {
            System.out.print("[");
            for (int j = 0; j < result[i].length; j++) {
                if (result[i][j] == 0) break;
                System.out.print(result[i][j] + (j < result[i].length - 1 ? ", " : ""));
            }
            System.out.println("]");
        }
    }
}
